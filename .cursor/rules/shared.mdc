---
description: 
globs: 
alwaysApply: true
---
# AI Rules for SalesAnalysis

SalesAnalysis (MVP) is a web application for B2B order recording and analysis that integrates data in one place and provides basic sales analytics and trends. The system enables manual order entry and XLSX import, order validation, amount calculations according to a defined algorithm, and metrics presentation on a dashboard.

## Tech Stack

- Angular 20
- TypeScript 5
- Nest 11
- Nx 21

## Project Structure

When introducing changes to the project, always follow the directory structure below:

- `./apps` - source code
- `./apps/web/src/shared` - Angular shared elements
- `./apps/web/src/pages` - Angular pages
- `./apps/web/src/service` - Angular fetch API services
- `./apps/db` - Supabase clients and types
- `./apps/shared/types` - Shared types for backend and frontend (Entities, DTOs)
- `./apps/api/src` - NestJs backend

When modifying the directory structure, always update this section.

## Coding practices

### Guidelines for clean code

- Use feedback from linters to improve the code when making changes.
- Prioritize error handling and edge cases.
- Handle errors and edge cases at the beginning of functions.
- Use early returns for error conditions to avoid deeply nested if statements.
- Place the happy path last in the function for improved readability.
- Avoid unnecessary else statements; use if-return pattern instead.
- Use guard clauses to handle preconditions and invalid states early.
- Implement proper error logging and user-friendly error messages.
- Consider using custom error types or error factories for consistent error handling.
